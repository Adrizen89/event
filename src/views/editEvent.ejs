<!DOCTYPE html>
<html lang="fr">
<head>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.1.2/dist/tailwind.min.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Modifier les Dates de l'Événement</title>
</head>
<body class="bg-gray-100 font-sans leading-normal tracking-normal">
    <header class="bg-blue-600 text-white p-4">
        <h1 class="text-4xl font-bold text-center">Modifier les Dates de l'Événement</h1>
    </header>
    <main class="container mx-auto p-6">
        <form action="/api/events/update" method="POST" class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4">
            <input type="hidden" name="id" value="<%= event.id %>">

            <!-- Champ pour la date de début -->
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="date_debut">Date de début</label>
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
                       type="datetime-local" name="date_debut" id="date_debut" 
                       value="<%= new Date(event.date_debut).toISOString().slice(0, 16) %>" required>
            </div>

            <!-- Champ pour la date de fin -->
            <div class="mb-6">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="date_fin">Date de fin</label>
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
                       type="datetime-local" name="date_fin" id="date_fin" 
                       value="<%= new Date(event.date_fin).toISOString().slice(0, 16) %>" required>
            </div>

            <!-- Bouton de soumission -->
            <div class="flex items-center justify-between">
                <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline" 
                        type="submit">
                    Mettre à jour les dates
                </button>
            </div>
        </form>
        <% if (event.participants && event.participants.length > 0) { %>
            <ul class="list-disc list-inside bg-gray-100 p-4 rounded-lg">
                <% event.participants.forEach(participant => { %>
                    <li class="flex items-center justify-between py-2 border-b border-gray-200 last:border-b-0">
                        <span class="text-gray-700 font-semibold">
                            <%= participant.firstName %> <%= participant.lastName %>
                        </span>
                        <button onclick="deleteParticipant('<%= participant.firstName %>', '<%= participant.lastName %>', '<%= event.id %>')"
                                class="text-red-500 hover:text-red-700 font-medium focus:outline-none">
                            Supprimer
                        </button>
                    </li>
                <% }) %>
            </ul>
        <% } else { %>
            <p class="text-gray-500 italic">Aucun participant inscrit pour cet événement.</p>
        <% } %>
        
        <button onclick="toggleParticipantForm()"
                class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 mt-4 rounded-lg shadow-md focus:outline-none focus:ring-2 focus:ring-green-400">
            Ajouter un participant
        </button>
        

        <!-- Formulaire pour ajouter un participant -->
        <div id="participantForm" class="mt-4 hidden">
            <form id="addParticipantForm">

                <input type="hidden" name="eventId" value="<%= event.id %>">

                <div class="mb-4">
                    <label for="firstName" class="block text-gray-700 text-sm font-bold mb-2">Prénom</label>
                    <input type="text" name="firstName" id="firstName" required class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>
                
                <div class="mb-4">
                    <label for="lastName" class="block text-gray-700 text-sm font-bold mb-2">Nom</label>
                    <input type="text" name="lastName" id="lastName" required class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>
                

                    <input type="hidden" name="dateInscription" id="dateInscription" required class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">


                <button type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
                    Ajouter
                </button>
            </form>
        </div>
    </main>

    <script>
        function toggleParticipantForm() {
            const form = document.getElementById('participantForm');
            form.classList.toggle('hidden');
        }

        document.getElementById('addParticipantForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const data = {
                eventId: formData.get('eventId'),
                firstName: formData.get('firstName'),
                lastName: formData.get('lastName'),
                dateInscription: formData.get('dateInscription')
            };
            
            try {
                const response = await fetch(`/api/events/${data.eventId}/participants`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });
                
                if (response.ok) {
                    alert('Participant ajouté avec succès.');
                    location.reload();
                } else {
                    const errorData = await response.json();
                    alert('Erreur : ' + errorData.message);
                }
            } catch (error) {
                console.error('Erreur lors de l\'ajout du participant :', error);
                alert('Erreur lors de l\'ajout du participant.');
            }
        });
        function deleteParticipant(firstName, lastName, eventId) {
            if (confirm(`Êtes-vous sûr de vouloir supprimer l'inscription de ${firstName} ${lastName} ?`)) {
                fetch(`/api/events/${eventId}/participants`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        firstName: firstName,
                        lastName: lastName
                    })
                })
                .then(response => {
                    if (response.ok) {
                        location.reload(); // Recharge la page après une suppression réussie
                    } else {
                        alert("Erreur lors de la suppression de l'inscription.");
                    }
                })
                .catch(error => {
                    console.error('Erreur:', error);
                    alert("Erreur lors de la suppression de l'inscription.");
                });
            }
        }
    </script>
</body>
</html>
